<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="resource.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        DAAACwwBP0AiyAAABD9JREFUeF7tm2vIZVMYx8cljSKRS4aSSa6lKXyRGeM2ucxEMpTLF7fIKPmAktLk
        /kkYItcvGqTRkIRMzGAaSrlmIrnFuMyQYlx/emodlp99znn3Oevs99jOr1a9nfN/LufZ+5y91rPWO2PG
        kADnAmuAC4Ht/X7rAV7ib34CHgUWAVtb2zqAvYE/sgLkfAScY5tWkW77flxnu1YB7A9cD3zsT56IO+RI
        27UOYEvgaOBB4EcV4XHrW01ccRXgB2Ab61oN8ImK0P6vQQ7wgArQ7h9DA5ypAqyz5j8NMF8fcJTMd/xp
        B1jlLEfIKsefVhq++h2m7y4AljqbMWCp8xwJaWHTbb4/nUROi5xvUWJFB3zgyGNE5Da6VSdwgiOOIcc7
        72IAyxxtDFnmvIsBrHW0MWSt8y4G8KWjjSFfOO9iAJsdbQzZ7LxHAjBTgX8BtrCuNBEjxcqZaV0jAN8r
        kR2tKQ2wk2J+Z01jVMwJ9rWmNKnllrPemsYAXlEyR1hTGmCeYr5sTWMATyiZU60pDXCaYq6wpjGAe5TM
        RdaUBrhYMe+2pjFS+zvnGmtKA+wGzAVOTttwc61pDOAyFeA2a1pNRZ9vuTWtBjhWBXjBmlYDHKwCvG3N
        MMTmSSrylcBDwGvAh8C3wM9pxN/xWrwXmiuAYxrZeAF2VwE2WDMIwIK0re6ZZh3C9pEooP0XI3WI8vbY
        b8BW1k2VtIW2LvNXiljGz3O8IgDfKNiu1vQjihY7RcDv8hVX0QufKPLnA/Qlwy6auQNfoEqA9xToIGv6
        AdwpH0EUI75iZ+m1Q5PNwuz1Otzh+EMBvKgAR1nTC+AC2ef4DogjNzskuziNMijnOY+BAR6T8zOs6Ub6
        lf9U9v1YD9w/gF1OHN4o85SouH2XWNMN4DjZNkmZpwNwrRxPeYcGuFS2TTLlC9UT4BI5vsuaVgMsVgH+
        9+d/VlvTaoADVID3rTHAnIqTYx02Ae8CK4FbgPOBw4Bt7acuaRs/Dmi9BdwM7GdNbYCd9QE2WmOAJ2Uz
        FWImF5Ou5cBVwInAHvbdi4pDHDHHWGxdLdJ5wF8zpzFF7fmMrZg+D8MG4Ok0zY0u0Z6OF/Q4xPGZtbWJ
        7Sg57XllopcvfWkin6fSIzrOM8yquPodNjm/2gBvyukca3KA26WfTl51frUBnpfTBdbkpGX0krRM/Uq2
        TRJf3YXOrzbAw3J8tjWtBrhVBbjcmlYDXK0C3GhNFenH6RDgQGB2GnvFJms2yjYwRkHFmv4+a6qIO0V2
        /YjJ08Y0vk7N0M54A3g9jdXAc2k8k/qLnXFv7CYBJzmfgQFOUaIrrakCOF12TVK0KXK4vXchrtxfhyj6
        /I/RqKnduusKsI+992C2bFdY0ADP5jkMTfTpHKEH/5h7A7sA71g0QqKlNivPoQg1DlDdVGG7XZrLR3L5
        uqIU4TNOs9zQaapOmDBhwoQJ/+ZP0cF8aVbTP2UAAAAASUVORK5CYII=
</value>
  </data>
</root>